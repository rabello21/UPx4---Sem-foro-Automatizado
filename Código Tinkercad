/*declara saidas pwm via A*/
const int rpSa = 6;
const int gpSa = 3;
const int bpSa = 5;
//declara saidas pwm via B
const int rpSb = 11;
const int gpSb = 9;
const int bpSb = 10;

//declara botões via A
#define A1 8
#define A2 12
#define A3 13
//declara botôes via B
#define B1 2
#define B2 4
#define B3 7

//variaveis botões via A
int A1value = 0;
int A2value = 0;
int A3value = 0;
//variaveis botões via B
int B1value = 0;
int B2value = 0;
int B3value = 0;

//variaveis vias A e B
int ViaA = 0;
int ViaB = 0;   

//variaveis ciclos A e B
int cycle = 1; 

//configura o LED RGB SA
void SA(int rp_valueA, int gp_valueA, int bp_valueA)
{
  analogWrite(rpSa, rp_valueA);
  analogWrite(gpSa, gp_valueA);
  analogWrite(bpSa, bp_valueA);
}

//configura o LED RGB SB
void SB(int rp_valueB, int gp_valueB, int bp_valueB)
{
  analogWrite(rpSb, rp_valueB);
  analogWrite(gpSb, gp_valueB);
  analogWrite(bpSb, bp_valueB);
}  

void setup()
{
  //define os botões como entrada
  pinMode(A1, INPUT);
  pinMode(A2, INPUT);
  pinMode(A3, INPUT);
  pinMode(B1, INPUT);
  pinMode(B2, INPUT);
  pinMode(B3, INPUT);
  
  //define as portas PWM como sáida
  pinMode(rpSa, OUTPUT);
  pinMode(gpSa, OUTPUT);
  pinMode(bpSa, OUTPUT);
  pinMode(rpSb, OUTPUT);
  pinMode(gpSb, OUTPUT);
  pinMode(bpSb, OUTPUT);
  
  Serial.begin(2400);
}

void loop()
{
  //atribui a leitura das portas às variaveis
  A1value=digitalRead(A1);
  A2value=digitalRead(A2);
  A3value=digitalRead(A3);
  B1value=digitalRead(B1);
  B2value=digitalRead(B2);
  B3value=digitalRead(B3);
  
  //atribui as variaveis dos botôes às vias
  if (A1value == HIGH)
  {
  	ViaA = 1; 
    Serial.println("a1");
  }
  if (A2value == HIGH)
  {
  	ViaA = 2;  
  }
  if (A3value == HIGH)
  {
  	ViaA = 3;  
  }   
 if (B1value == HIGH)
  {
  	ViaB = 1;  
  }    
  if (B2value == HIGH)
  {
  	ViaB = 2;  
  }
  if (B3value == HIGH)
  {
  	ViaB = 3;  
  }
  
  //estrutura condicional para situações possíveis
  
  //ciclo básico
  //A e B inferiores a 1km
  if (ViaA==0 && ViaB==0 && cycle==1)
  {  
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (2000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (2000);
    SB (255,255,0);
    delay(1000);
    cycle=1;
  }
  //1km em A e 1km em B
  if (ViaA==1 && ViaB==1 && cycle==1)
  {
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (3000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (3000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }  
  //2km em A e 2km em B
  if (ViaA==2 && ViaB==2 && cycle==1)
  {   
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (4000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (4000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }  
  //3km em A e 3km em B
  if (ViaA==3 && ViaB==3 && cycle==1)
  {
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (5000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (5000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }  
  //1km em A e 0km em B
  if (ViaA==1 && ViaB==0 && cycle==1)
  {
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (3000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (2000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }  
  //2km em A e 1km em B
  if (ViaA==2 && ViaB==1 && cycle==1)
  {
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (4000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (3000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }
  //3km em A e 2km em B
  if (ViaA==3 && ViaB==2 && cycle==1)
  {
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (5000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (4000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }
  //0km em A e 1km em B
  if (ViaA==0 && ViaB==1 && cycle==1)
  {
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (2000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (3000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }
  //1km em A e 2km em B
  if (ViaA==1 && ViaB==2 && cycle==1)
  {
    cycle=0;
    SA (0,255,0);
    SB (255,0,0);
    delay (3000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (4000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle==1;
  }
  //3km em A e 0km em B
  if (ViaA==3 && ViaB==0 && cycle==1)
  {
   cycle==0;
    SA (0,255,0);
    SB (255,0,0);
    delay (5000);
    SA (255,255,0);
    delay (1000);
    SA (255,0,0);
    SB (0,255,0);
    delay (2000);
    SB (255,255,0);
    delay(1000);
    ViaA = 0;
    ViaB = 0;
    cycle=1;
  }
}
